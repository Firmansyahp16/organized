// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id String @id @map("_id") @db.String
  fullName String?
  email String? @unique
  hashedPassword String?
  rank String?
  globalRoles String[]

  /// [BranchRoleType]
  branchRoles Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations

  eventCreated Events[]
  examCreated Examinations[]
  scheduleCreated Schedules[]
}

model Branches {
  id String @id @map("_id") @db.String
  name String?
  coachIds String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations

  schedules Schedules[]
  examinations Examinations[]
}

model Schedules {
  id String @id @map("_id") @db.String
  title String?
  date DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations

  attendance Attendances?

  branchId String? @db.String
  branch Branches? @relation(fields: [branchId],references: [id])

  createdById String? @db.String
  createdBy Users? @relation(fields: [createdById],references: [id])
}

model Attendances {
  id String @id @map("_id") @db.String

  /// [DetailType]
  details Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations

  eventId String? @unique @db.String
  event Events? @relation(fields: [eventId],references: [id])

  scheduleId String? @unique @db.String
  schedule Schedules? @relation(fields: [scheduleId],references: [id])
}

model Examinations {
  id String @id @map("_id") @db.String
  title String?
  date DateTime?

  /// [ParticipantType]
  participants Json?

  /// [ResultType]
  results Json?

  examiners String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations

  branchId String? @db.String
  branch Branches? @relation(fields: [branchId], references: [id])

  createdById String? @db.String
  createdBy Users? @relation(fields: [createdById], references: [id])
}

model Events {
  id String @id @map("_id") @db.String
  title String?
  description String?
  date DateTime?
  type String?
  branchIds String?
  examiners String[]
  
  /// [ParticipantType]
  participants Json?

  /// [ResultType]
  results Json?

  // Relations

  attendance Attendances?

  createdById String? @db.String
  createdBy Users? @relation(fields: [createdById],references: [id])
}